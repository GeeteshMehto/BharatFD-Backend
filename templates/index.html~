<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FAQ API Testing</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        :root {
            --primary-color: #6366f1;
            --secondary-color: #818cf8;
            --background-color: #f8fafc;
            --card-background: #ffffff;
            --text-color: #1e293b;
            --border-radius: 12px;
            --shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
        }

        body {
            font-family: 'Inter', system-ui, -apple-system, sans-serif;
            background-color: var(--background-color);
            color: var(--text-color);
            line-height: 1.6;
            padding: 2rem 0;
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 0 1.5rem;
        }

        .project-intro {
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 2rem;
            border-radius: var(--border-radius);
            margin-bottom: 2rem;
            box-shadow: var(--shadow);
        }

        .card {
            background: var(--card-background);
            border: none;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            margin-bottom: 2rem;
            transition: transform 0.2s ease;
        }

        .card:hover {
            transform: translateY(-2px);
        }

        .card-header {
            background: var(--card-background);
            border-bottom: 1px solid #e2e8f0;
            padding: 1.5rem;
            border-radius: var(--border-radius) var(--border-radius) 0 0 !important;
        }

        .card-header h3 {
            color: var(--text-color);
            font-size: 1.25rem;
            margin: 0;
        }

        .card-body {
            padding: 1.5rem;
        }

        .btn-custom {
            background-color: var(--primary-color);
            border: none;
            padding: 0.5rem 1.5rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.2s ease;
            color: white;
        }

        .btn-custom:hover {
            background-color: var(--secondary-color);
            transform: translateY(-1px);
            color: white;
        }

        .form-control {
            border-radius: 8px;
            border: 1px solid #e2e8f0;
            padding: 0.75rem;
            transition: all 0.2s ease;
        }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);
        }

        .faq-list ul li {
            background: var(--card-background);
            padding: 1.5rem;
            margin-bottom: 1rem;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            transition: all 0.2s ease;
        }

        .faq-list ul li:hover {
            transform: translateY(-2px);
        }

        .btn-edit, .btn-delete {
            padding: 0.25rem 1rem;
            border-radius: 6px;
            margin-left: 0.5rem;
            font-size: 0.875rem;
        }

        .alert {
            border-radius: var(--border-radius);
            padding: 1rem;
            margin-bottom: 1rem;
            display: none;
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
            min-width: 200px;
            text-align: center;
            box-shadow: var(--shadow);
        }

        .loading {
            display: none;
            color: var(--primary-color);
            font-size: 1rem;
            margin-top: 1rem;
        }

        .language-toolbar {
            background: var(--card-background);
            padding: 1.5rem;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            margin-bottom: 2rem;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .language-toolbar label {
            margin: 0;
            font-weight: 500;
            white-space: nowrap;
        }

        .language-toolbar select {
            flex: 1;
            max-width: 200px;
            appearance: none;
            padding: 0.5rem 2.5rem 0.5rem 1rem;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%236366f1'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19 9l-7 7-7-7'%3E%3C/path%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 0.75rem center;
            background-size: 1.5rem;
        }

        .language-toolbar .btn-custom {
            white-space: nowrap;
        }

        @media (max-width: 768px) {
            .language-toolbar {
                flex-direction: column;
                align-items: stretch;
                gap: 0.5rem;
            }

            .language-toolbar select {
                max-width: 100%;
            }
        }

        /* Add these to your existing :root variables */
.loader-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(3px);
    z-index: 9999;
    display: flex;
    justify-content: center;
    align-items: center;
}

.loader-content {
    background: var(--card-background);
    padding: 2rem;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow);
    text-align: center;
    max-width: 400px;
    margin: 1rem;
}

.spinner {
    width: 50px;
    height: 50px;
    border: 5px solid #f3f3f3;
    border-top: 5px solid var(--primary-color);
    border-radius: 50%;
    margin: 0 auto 1rem;
    animation: spin 1s linear infinite;
}

.loading-text {
    color: var(--text-color);
    margin-bottom: 1rem;
    font-size: 1rem;
    line-height: 1.5;
}

.progress-bar {
    background: #e2e8f0;
    height: 4px;
    border-radius: 2px;
    overflow: hidden;
}

.progress-fill {
    width: 30%;
    height: 100%;
    background: var(--primary-color);
    animation: progress-animation 2s infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

@keyframes progress-animation {
    0% { width: 0%; }
    50% { width: 60%; }
    100% { width: 90%; }
}
    </style>
</head>
<body>
 <!-- Add this loader overlay -->
    <div id="translationLoader" class="loader-overlay" style="display: none;">
        <div class="loader-content">
            <div class="spinner"></div>
            <div class="loading-text">
                Translation in all supported languages is going on. This is a one-time process...
            </div>
            <div class="progress-bar">
                <div class="progress-fill"></div>
            </div>
        </div>
    </div>

<div class="container">
    <!-- Alert Messages -->
    <div class="alert alert-success" id="successMessage" role="alert">Success!</div>
    <div class="alert alert-danger" id="errorMessage" role="alert">An error occurred!</div>

    <!-- Project Introduction -->
    <div class="project-intro">
        <h1 class="mb-4">FAQ Management System</h1>
        <p class="mb-3">Welcome to the FAQ Management System API Testing Interface. This tool allows you to manage multilingual FAQs through a simple and intuitive interface.</p>
        <h5 class="mb-3">API Endpoints:</h5>
        <ul>
            <li>GET /api/faqs/ - Fetch all FAQs</li>
            <li>GET /api/faqs/{id}/ - Fetch specific FAQ</li>
            <li>POST /api/faqs/ - Create new FAQ</li>
            <li>PATCH /api/faqs/{id}/ - Update FAQ</li>
            <li>DELETE /api/faqs/{id}/ - Delete FAQ</li>
        </ul>
    </div>

    <!-- Language Select Form -->
    <div class="language-toolbar">
        <label for="language">Select Language:</label>
        <select class="form-control" id="language">
            <option value="en">English</option>
            <option value="hi">Hindi</option>
            <option value="bn">Bengali</option>
            <option value="ta">Tamil</option>
            <option value="te">Telugu</option>
            <option value="ml">Malayalam</option>
            <option value="gu">Gujarati</option>
            <option value="kn">Kannada</option>
            <option value="mr">Marathi</option>
            <option value="pa">Punjabi</option>
            <option value="or">Odia</option>
        </select>
        <button class="btn btn-custom" id="fetchLanguageFAQ">Fetch FAQs</button>
    </div>

    <!-- Fetch FAQ Form -->
    <div class="card">
        <div class="card-header">
            <h3>Fetch FAQ by ID</h3>
        </div>
        <div class="card-body">
            <div class="form-group">
                <label for="faqId">FAQ ID</label>
                <input type="number" class="form-control" id="faqId" placeholder="Enter FAQ ID (e.g., 16)">
            </div>
            <button class="btn btn-custom" id="fetchFAQ">Fetch FAQ</button>
            <div class="loading" id="loadingText">Loading...</div>
            <div id="faqDetails" class="mt-4"></div>
        </div>
    </div>

    <!-- Create FAQ Form -->
    <div class="card">
        <div class="card-header">
            <h3>Create FAQ</h3>
        </div>
        <div class="card-body">
            <div class="form-group">
                <label for="question">Question (in English)</label>
                <input type="text" class="form-control" id="question" placeholder="Enter Question">
            </div>
            <div class="form-group">
                <label for="answer">Answer</label>
                <textarea class="form-control" id="answer" rows="4" placeholder="Enter Answer"></textarea>
            </div>
            <button class="btn btn-custom" id="createFAQ">Create FAQ</button>
        </div>
    </div>

    <!-- FAQ List -->
    <div class="faq-list">
        <h3 class="mb-4">All FAQs</h3>
        <ul id="faqList" class="list-unstyled"></ul>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script>
    // Fetch and display FAQ by ID
    $('#fetchFAQ').click(function () {
        const faqId = $('#faqId').val();
        if (faqId) {
            $('#loadingText').show();
            $('#faqDetails').html('');

            $.get(`/api/faqs/${faqId}/`, function (data) {
                $('#loadingText').hide();
                $('#faqDetails').html(`
                    <h4>Question:</h4>
                    <p>${data.question}</p>
                    <h4>Answer:</h4>
                    <p>${data.answer}</p>
                `);
                showAlert('#successMessage');
            }).fail(function () {
                $('#loadingText').hide();
                showAlert('#errorMessage');
            });
        }
    });

    // Create a new FAQ
   
$('#createFAQ').click(function () {
    const question = $('#question').val();
    const answer = $('#answer').val();

    if (question && answer) {
        // Show loader
        document.getElementById('translationLoader').style.display = 'flex';
        document.body.style.overflow = 'hidden'; // Prevent scrolling

        $.ajax({
            url: '/api/faqs/',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                question: question,
                answer: answer
            }),
            success: function () {
                // Hide loader
                document.getElementById('translationLoader').style.display = 'none';
                document.body.style.overflow = ''; // Restore scrolling
                $('#question').val(''); // Clear form
                $('#answer').val(''); // Clear form
                showAlert('#successMessage');
                fetchFAQs();
            },
            error: function () {
                // Hide loader
                document.getElementById('translationLoader').style.display = 'none';
                document.body.style.overflow = ''; // Restore scrolling
                showAlert('#errorMessage');
            }
        });
    }
});

    // Fetch FAQs in the selected language
    $('#fetchLanguageFAQ').click(function () {
        const language = $('#language').val();
        fetchFAQs(language);
    });

    // Fetch and display all FAQs with language filter
    function fetchFAQs(language = 'en') {
        $('#loadingText').show();
        $.get(`/api/faqs/?lang=${language}`, function (data) {
            $('#loadingText').hide();
            $('#faqList').html('');
            data.forEach(faq => {
                $('#faqList').append(`
                    <li id="faq-${faq.id}">
                        <strong>${faq.question}</strong><br>
                        ${faq.answer}
                        <button class="btn btn-warning btn-sm btn-edit" onclick="editFAQ(${faq.id})">Edit</button>
                        <button class="btn btn-danger btn-sm btn-delete" onclick="deleteFAQ(${faq.id})">Delete</button>
                    </li>
                `);
            });
            showAlert('#successMessage');
        }).fail(function () {
            $('#loadingText').hide();
            showAlert('#errorMessage');
        });
    }

    // Show alert message
    function showAlert(selector) {
        $(selector).fadeIn()
            .delay(2000)
            .fadeOut();
    }

   // Edit FAQ
function editFAQ(id) {
    const newQuestion = prompt('Enter new question:');
    const newAnswer = prompt('Enter new answer:');

    if (newQuestion && newAnswer) {
        // Show loader
        document.getElementById('translationLoader').style.display = 'flex';
        document.body.style.overflow = 'hidden'; // Prevent scrolling

        $.ajax({
            url: `/api/faqs/${id}/`,
            type: 'PATCH',
            contentType: 'application/json',
            data: JSON.stringify({
                question: newQuestion,
                answer: newAnswer
            }),
            success: function () {
                // Hide loader
                document.getElementById('translationLoader').style.display = 'none';
                document.body.style.overflow = ''; // Restore scrolling
                showAlert('#successMessage');
                fetchFAQs();
            },
            error: function () {
                // Hide loader
                document.getElementById('translationLoader').style.display = 'none';
                document.body.style.overflow = ''; // Restore scrolling
                showAlert('#errorMessage');
            }
        });
    }
}

    // Delete FAQ
    function deleteFAQ(id) {
        if (confirm('Are you sure you want to delete this FAQ?')) {
            $.ajax({
                url: `/api/faqs/${id}/`,
                type: 'DELETE',
                success: function () {
                    showAlert('#successMessage');
                    fetchFAQs();
                },
                error: function () {
                    showAlert('#errorMessage');
                }
            });
        }
    }

    // Initial fetch of FAQs
    fetchFAQs();
</script>

</body>
</html>